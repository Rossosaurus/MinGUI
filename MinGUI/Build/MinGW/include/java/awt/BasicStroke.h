// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_awt_BasicStroke__
#define __java_awt_BasicStroke__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace awt
    {
      class BasicStroke;
      class Shape;
    }
  }
}

class java::awt::BasicStroke : public ::java::lang::Object
{
public:
  BasicStroke (jfloat, jint, jint, jfloat, jfloatArray, jfloat);
  BasicStroke (jfloat, jint, jint, jfloat);
  BasicStroke (jfloat, jint, jint);
  BasicStroke (jfloat);
  BasicStroke ();
  virtual ::java::awt::Shape *createStrokedShape (::java::awt::Shape *);
  virtual jfloat getLineWidth () { return width; }
  virtual jint getEndCap () { return cap; }
  virtual jint getLineJoin () { return join; }
  virtual jfloat getMiterLimit () { return limit; }
  virtual jfloatArray getDashArray () { return dash; }
  virtual jfloat getDashPhase () { return phase; }
  virtual jint hashCode ();
  virtual jboolean equals (::java::lang::Object *);
  static const jint JOIN_MITER = 0L;
  static const jint JOIN_ROUND = 1L;
  static const jint JOIN_BEVEL = 2L;
  static const jint CAP_BUTT = 0L;
  static const jint CAP_ROUND = 1L;
  static const jint CAP_SQUARE = 2L;
private:
  jfloat __attribute__((aligned(__alignof__( ::java::lang::Object ))))  width;
  jint cap;
  jint join;
  jfloat limit;
  jfloatArray dash;
  jfloat phase;
public:

  static ::java::lang::Class class$;
};

#endif /* __java_awt_BasicStroke__ */
