// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __java_awt_Scrollbar__
#define __java_awt_Scrollbar__

#pragma interface

#include <java/awt/Component.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace awt
    {
      class Scrollbar;
      class AWTEvent;
      namespace event
      {
        class AdjustmentEvent;
        class AdjustmentListener;
      }
    }
  }
}

class java::awt::Scrollbar : public ::java::awt::Component
{
public:
  Scrollbar ();
  Scrollbar (jint);
  Scrollbar (jint, jint, jint, jint, jint);
  virtual jint getOrientation () { return orientation; }
  virtual void setOrientation (jint);
  virtual jint getValue () { return value; }
  virtual void setValue (jint);
  virtual jint getMaximum () { return maximum; }
  virtual void setMaximum (jint);
  virtual jint getMinimum () { return minimum; }
  virtual void setMinimum (jint);
  virtual jint getVisibleAmount () { return visibleAmount; }
  virtual jint getVisible ();
  virtual void setVisibleAmount (jint);
  virtual void setValues (jint, jint, jint, jint);
  virtual jint getUnitIncrement () { return lineIncrement; }
  virtual jint getLineIncrement () { return lineIncrement; }
  virtual void setUnitIncrement (jint);
  virtual void setLineIncrement (jint);
  virtual jint getBlockIncrement () { return pageIncrement; }
  virtual jint getPageIncrement () { return pageIncrement; }
  virtual void setBlockIncrement (jint);
  virtual void setPageIncrement (jint);
  virtual void addNotify ();
  virtual void addAdjustmentListener (::java::awt::event::AdjustmentListener *);
  virtual void removeAdjustmentListener (::java::awt::event::AdjustmentListener *);
public:  // actually protected
  virtual void processEvent (::java::awt::AWTEvent *);
  virtual void processAdjustmentEvent (::java::awt::event::AdjustmentEvent *);
public: // actually package-private
  virtual void dispatchEventImpl (::java::awt::AWTEvent *);
public:  // actually protected
  virtual ::java::lang::String *paramString ();
public:
  virtual JArray< ::java::util::EventListener *> *getListeners (::java::lang::Class *);
  virtual JArray< ::java::awt::event::AdjustmentListener *> *getAdjustmentListeners ();
  virtual jboolean getValueIsAdjusting () { return valueIsAdjusting; }
  virtual void setValueIsAdjusting (jboolean);
  static const jint HORIZONTAL = 0L;
  static const jint VERTICAL = 1L;
private:
  static const jlong serialVersionUID = 8451667562882310543LL;
  jint __attribute__((aligned(__alignof__( ::java::awt::Component ))))  lineIncrement;
  jint pageIncrement;
  jint maximum;
  jint minimum;
  jint orientation;
  jint value;
  jint visibleAmount;
  ::java::awt::event::AdjustmentListener *adjustment_listeners;
  jboolean valueIsAdjusting;
public:

  static ::java::lang::Class class$;
};

#endif /* __java_awt_Scrollbar__ */
