// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_JEditorPane__
#define __javax_swing_JEditorPane__

#pragma interface

#include <javax/swing/text/JTextComponent.h>

extern "Java"
{
  namespace javax
  {
    namespace accessibility
    {
      class AccessibleContext;
    }
    namespace swing
    {
      class JEditorPane;
      namespace event
      {
        class HyperlinkEvent;
        class HyperlinkListener;
      }
      namespace text
      {
        class EditorKit;
      }
    }
  }
  namespace java
  {
    namespace awt
    {
      namespace event
      {
        class KeyEvent;
      }
      class Dimension;
    }
    namespace net
    {
      class URL;
    }
  }
}

class javax::swing::JEditorPane : public ::javax::swing::text::JTextComponent
{
public:
  JEditorPane ();
  JEditorPane (::java::lang::String *);
  JEditorPane (::java::lang::String *, ::java::lang::String *);
  JEditorPane (::java::net::URL *);
public: // actually package-private
  virtual void addHyperlinkListener (::javax::swing::event::HyperlinkListener *) { }
public:  // actually protected
  virtual ::javax::swing::text::EditorKit *createDefaultEditorKit ();
public: // actually package-private
  static ::javax::swing::text::EditorKit *createEditorKitForContentType (::java::lang::String *);
  virtual void fireHyperlinkUpdate (::javax::swing::event::HyperlinkEvent *) { }
public:
  virtual ::javax::accessibility::AccessibleContext *getAccessibleContext () { return 0; }
public: // actually package-private
  virtual ::java::lang::String *getContentType () { return ctype; }
  virtual ::javax::swing::text::EditorKit *getEditorKit () { return kit; }
  static ::java::lang::String *getEditorKitClassNameForContentType (::java::lang::String *);
  virtual ::javax::swing::text::EditorKit *getEditorKitForContentType (::java::lang::String *) { return kit; }
public:
  virtual ::java::awt::Dimension *getPreferredSize ();
  virtual jboolean getScrollableTracksViewportHeight ();
  virtual jboolean getScrollableTracksViewportWidth ();
public: // actually package-private
  virtual ::java::net::URL *getPage () { return page_url; }
public:  // actually protected
  virtual ::java::io::InputStream *getStream (::java::net::URL *);
public:
  virtual ::java::lang::String *getText ();
  virtual ::java::lang::String *getUIClassID ();
  virtual jboolean isFocusCycleRoot () { return focus_root; }
  virtual jboolean isManagingFocus () { return manages_focus; }
public:  // actually protected
  virtual ::java::lang::String *paramString ();
  virtual void processComponentKeyEvent (::java::awt::event::KeyEvent *) { }
  virtual void processKeyEvent (::java::awt::event::KeyEvent *) { }
public: // actually package-private
  virtual void read (::java::io::InputStream *, ::java::lang::Object *) { }
  static void registerEditorKitForContentType (::java::lang::String *, ::java::lang::String *) { }
  static void registerEditorKitForContentType (::java::lang::String *, ::java::lang::String *, ::java::lang::ClassLoader *) { }
  virtual void removeHyperlinkListener (::javax::swing::event::HyperlinkListener *) { }
  virtual void replaceSelection (::java::lang::String *) { }
public:  // actually protected
  virtual void scrollToReference (::java::lang::String *) { }
public: // actually package-private
  virtual void setContentType (::java::lang::String *);
  virtual void setEditorKit (::javax::swing::text::EditorKit *);
  virtual void setEditorKitForContentType (::java::lang::String *, ::javax::swing::text::EditorKit *);
  virtual void setPage (::java::lang::String *) { }
  virtual void setPage (::java::net::URL *) { }
public:
  virtual void setText (::java::lang::String *);
public: // actually package-private
  ::java::net::URL * __attribute__((aligned(__alignof__( ::javax::swing::text::JTextComponent )))) page_url;
  ::javax::swing::text::EditorKit *kit;
  ::java::lang::String *ctype;
  jboolean focus_root;
  jboolean manages_focus;
public:

  static ::java::lang::Class class$;
};

#endif /* __javax_swing_JEditorPane__ */
