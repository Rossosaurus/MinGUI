// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_JToolBar__
#define __javax_swing_JToolBar__

#pragma interface

#include <javax/swing/JComponent.h>

extern "Java"
{
  namespace javax
  {
    namespace accessibility
    {
      class AccessibleContext;
    }
    namespace swing
    {
      class JToolBar;
      namespace plaf
      {
        class ToolBarUI;
      }
      class JButton;
      class Action;
    }
  }
  namespace java
  {
    namespace beans
    {
      class PropertyChangeListener;
    }
    namespace awt
    {
      class Dimension;
      class Component;
      class Graphics;
      class Insets;
    }
  }
}

class javax::swing::JToolBar : public ::javax::swing::JComponent
{
public:
  JToolBar ();
  JToolBar (jint);
  JToolBar (::java::lang::String *);
  JToolBar (::java::lang::String *, jint);
private:
  void writeObject (::java::io::ObjectOutputStream *) { }
public:
  virtual ::javax::swing::JButton *add (::javax::swing::Action *) { return 0; }
public:  // actually protected
  virtual void paintBorder (::java::awt::Graphics *) { }
public:
  virtual ::javax::swing::plaf::ToolBarUI *getUI ();
  virtual void setUI (::javax::swing::plaf::ToolBarUI *);
  virtual void updateUI ();
  virtual ::java::lang::String *getUIClassID ();
  virtual jint getComponentIndex (::java::awt::Component *);
  virtual ::java::awt::Component *getComponentAtIndex (jint) { return 0; }
  virtual ::java::awt::Insets *getMargin () { return 0; }
  virtual void setMargin (::java::awt::Insets *) { }
  virtual jboolean isBorderPainted ();
  virtual void setBorderPainted (jboolean) { }
  virtual jboolean isFloatable ();
  virtual void setFloatable (jboolean) { }
  virtual jint getOrientation ();
  virtual void setOrientation (jint) { }
  virtual void addSeparator () { }
  virtual void addSeparator (::java::awt::Dimension *) { }
public:  // actually protected
  virtual ::javax::swing::JButton *createActionComponent (::javax::swing::Action *) { return 0; }
  virtual ::java::beans::PropertyChangeListener *createActionChangeListener (::javax::swing::JButton *) { return 0; }
  virtual void addImpl (::java::awt::Component *, ::java::lang::Object *, jint) { }
  virtual ::java::lang::String *paramString () { return 0; }
public:
  virtual ::javax::accessibility::AccessibleContext *getAccessibleContext ();
private:
  static ::java::lang::String *uiClassID;
  jboolean __attribute__((aligned(__alignof__( ::javax::swing::JComponent ))))  paintBorder__;
  ::java::awt::Insets *margin;
  jboolean floatable;
  jint orientation;

  friend class javax_swing_JToolBar$Separator;
  friend class javax_swing_JToolBar$AccessibleJToolBar;
public:

  static ::java::lang::Class class$;
};

#endif /* __javax_swing_JToolBar__ */
