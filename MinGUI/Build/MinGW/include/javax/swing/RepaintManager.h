// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_RepaintManager__
#define __javax_swing_RepaintManager__

#pragma interface

#include <java/lang/Object.h>

extern "Java"
{
  namespace javax
  {
    namespace swing
    {
      class JComponent;
      class RepaintManager;
    }
  }
  namespace java
  {
    namespace awt
    {
      class Component;
      class Rectangle;
      class Dimension;
      class Image;
    }
  }
}

class javax::swing::RepaintManager : public ::java::lang::Object
{
public:
  RepaintManager ();
  virtual ::java::lang::String *toString ();
  static ::javax::swing::RepaintManager *currentManager (::java::awt::Component *) { return 0; }
  static ::javax::swing::RepaintManager *currentManager (::javax::swing::JComponent *) { return 0; }
  static void setCurrentManager (::javax::swing::RepaintManager *) { }
  virtual void addInvalidComponent (::javax::swing::JComponent *);
  virtual void removeInvalidComponent (::javax::swing::JComponent *);
  virtual void addDirtyRegion (::javax::swing::JComponent *, jint, jint, jint, jint);
  virtual ::java::awt::Rectangle *getDirtyRegion (::javax::swing::JComponent *) { return 0; }
  virtual void markCompletelyDirty (::javax::swing::JComponent *) { }
  virtual void markCompletelyClean (::javax::swing::JComponent *) { }
  virtual jboolean isCompletelyDirty (::javax::swing::JComponent *);
  virtual void validateInvalidComponents () { }
  virtual void paintDirtyRegions () { }
  virtual ::java::awt::Image *getOffscreenBuffer (::java::awt::Component *, jint, jint) { return 0; }
  virtual ::java::awt::Dimension *getDoubleBufferMaximumSize () { return 0; }
  virtual void setDoubleBufferMaximumSize (::java::awt::Dimension *) { }
  virtual void setDoubleBufferingEnabled (jboolean) { }
  virtual jboolean isDoubleBufferingEnabled ();
public: // actually package-private
  ::java::util::Hashtable * __attribute__((aligned(__alignof__( ::java::lang::Object )))) dirtyComponents;
  ::java::util::Hashtable *tmpDirtyComponents;
  ::java::util::Vector *invalidComponents;
  jboolean doubleBufferingEnabled;
  ::java::awt::Image *doubleBuffer;
  ::java::awt::Dimension *doubleBufferSize;
private:
  ::java::awt::Dimension *doubleBufferMaxSize;
  jboolean resetDoubleBuffer;
  static ::java::lang::Object *repaintManagerKey;
public: // actually package-private
  ::java::awt::Rectangle *tmp;
public:

  static ::java::lang::Class class$;
};

#endif /* __javax_swing_RepaintManager__ */
