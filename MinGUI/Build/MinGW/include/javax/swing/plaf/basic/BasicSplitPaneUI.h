// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_plaf_basic_BasicSplitPaneUI__
#define __javax_swing_plaf_basic_BasicSplitPaneUI__

#pragma interface

#include <javax/swing/plaf/SplitPaneUI.h>

extern "Java"
{
  namespace java
  {
    namespace awt
    {
      class Insets;
      class Dimension;
      class Graphics;
      class Component;
      namespace event
      {
        class ActionListener;
        class FocusListener;
      }
    }
    namespace beans
    {
      class PropertyChangeListener;
    }
  }
  namespace javax
  {
    namespace swing
    {
      class JComponent;
      class KeyStroke;
      namespace plaf
      {
        class ComponentUI;
        namespace basic
        {
          class BasicSplitPaneUI;
          class BasicSplitPaneDivider;
        }
      }
      class JSplitPane;
    }
  }
}

class javax::swing::plaf::basic::BasicSplitPaneUI : public ::javax::swing::plaf::SplitPaneUI
{
public:
  static ::javax::swing::plaf::ComponentUI *createUI (::javax::swing::JComponent *);
  BasicSplitPaneUI ();
  virtual void installUI (::javax::swing::JComponent *) { }
public:  // actually protected
  virtual void installDefaults () { }
  virtual void installListeners () { }
  virtual void installKeyboardListeners () { }
  virtual void installKeyboardActions () { }
public:
  virtual void uninstallUI (::javax::swing::JComponent *) { }
public:  // actually protected
  virtual void uninstallDefaults () { }
  virtual void uninstallListeners () { }
  virtual void uninstallKeyboardActions () { }
  virtual ::java::beans::PropertyChangeListener *createPropertyChangeListener () { return 0; }
  virtual ::java::awt::event::FocusListener *createFocusListener () { return 0; }
  virtual ::java::awt::event::ActionListener *createKeyboardUpLeftListener () { return 0; }
  virtual ::java::awt::event::ActionListener *createKeyboardDownRightListener () { return 0; }
  virtual ::java::awt::event::ActionListener *createKeyboardHomeListener () { return 0; }
  virtual ::java::awt::event::ActionListener *createKeyboardEndListener () { return 0; }
  virtual ::java::awt::event::ActionListener *createKeyboardResizeToggleListener () { return 0; }
public:
  virtual jint getOrientation ();
  virtual void setOrientation (jint) { }
  virtual jboolean isContinuousLayout ();
  virtual void setContinuousLayout (jboolean) { }
  virtual jint getLastDragLocation ();
  virtual void setLastDragLocation (jint) { }
  virtual ::javax::swing::plaf::basic::BasicSplitPaneDivider *getDivider () { return divider; }
public:  // actually protected
  virtual ::java::awt::Component *createDefaultNonContinuousLayoutDivider () { return 0; }
  virtual void setNonContinuousLayoutDivider (::java::awt::Component *);
  virtual void setNonContinuousLayoutDivider (::java::awt::Component *, jboolean);
public:
  virtual ::java::awt::Component *getNonContinuousLayoutDivider () { return nonContinuousLayoutDivider; }
  virtual ::javax::swing::JSplitPane *getSplitPane () { return splitPane; }
  virtual ::javax::swing::plaf::basic::BasicSplitPaneDivider *createDefaultDivider () { return 0; }
  virtual void resetToPreferredSizes (::javax::swing::JSplitPane *) { }
  virtual void setDividerLocation (::javax::swing::JSplitPane *, jint) { }
  virtual jint getDividerLocation (::javax::swing::JSplitPane *);
  virtual jint getMinimumDividerLocation (::javax::swing::JSplitPane *);
  virtual jint getMaximumDividerLocation (::javax::swing::JSplitPane *);
  virtual void finishedPaintingChildren (::javax::swing::JSplitPane *, ::java::awt::Graphics *) { }
  virtual void paint (::java::awt::Graphics *, ::javax::swing::JComponent *) { }
  virtual ::java::awt::Dimension *getPreferredSize (::javax::swing::JComponent *) { return 0; }
  virtual ::java::awt::Dimension *getMinimumSize (::javax::swing::JComponent *) { return 0; }
  virtual ::java::awt::Dimension *getMaximumSize (::javax::swing::JComponent *) { return 0; }
  virtual ::java::awt::Insets *getInsets (::javax::swing::JComponent *);
public:  // actually protected
  virtual void resetLayoutManager () { }
  virtual void startDragging () { }
  virtual void dragDividerTo (jint) { }
  virtual void finishDraggingTo (jint) { }
  virtual jint getDividerBorderSize ();
  static ::java::lang::String *NON_CONTINUOUS_DIVIDER;
  static jint KEYBOARD_DIVIDER_MOVE_OFFSET;
  ::javax::swing::JSplitPane * __attribute__((aligned(__alignof__( ::javax::swing::plaf::SplitPaneUI )))) splitPane;
  ::javax::swing::plaf::basic::BasicSplitPaneDivider *divider;
  ::java::beans::PropertyChangeListener *propertyChangeListener;
  ::java::awt::event::FocusListener *focusListener;
  jint dividerSize;
  ::java::awt::Component *nonContinuousLayoutDivider;
  jboolean draggingHW;
  jint beginDragDividerLocation;
  ::javax::swing::KeyStroke *upKey;
  ::javax::swing::KeyStroke *downKey;
  ::javax::swing::KeyStroke *leftKey;
  ::javax::swing::KeyStroke *rightKey;
  ::javax::swing::KeyStroke *homeKey;
  ::javax::swing::KeyStroke *endKey;
  ::javax::swing::KeyStroke *dividerResizeToggleKey;
  ::java::awt::event::ActionListener *keyboardUpLeftListener;
  ::java::awt::event::ActionListener *keyboardDownRightListener;
  ::java::awt::event::ActionListener *keyboardHomeListener;
  ::java::awt::event::ActionListener *keyboardEndListener;
  ::java::awt::event::ActionListener *keyboardResizeToggleListener;
public:

  static ::java::lang::Class class$;
};

#endif /* __javax_swing_plaf_basic_BasicSplitPaneUI__ */
