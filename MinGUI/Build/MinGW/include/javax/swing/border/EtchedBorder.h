// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_border_EtchedBorder__
#define __javax_swing_border_EtchedBorder__

#pragma interface

#include <javax/swing/border/AbstractBorder.h>

extern "Java"
{
  namespace javax
  {
    namespace swing
    {
      namespace border
      {
        class EtchedBorder;
      }
    }
  }
  namespace java
  {
    namespace awt
    {
      class Insets;
      class Graphics;
      class Component;
      class Color;
    }
  }
}

class javax::swing::border::EtchedBorder : public ::javax::swing::border::AbstractBorder
{
public:
  EtchedBorder ();
  EtchedBorder (jint);
  EtchedBorder (::java::awt::Color *, ::java::awt::Color *);
  EtchedBorder (jint, ::java::awt::Color *, ::java::awt::Color *);
  virtual void paintBorder (::java::awt::Component *, ::java::awt::Graphics *, jint, jint, jint, jint);
  virtual ::java::awt::Insets *getBorderInsets (::java::awt::Component *);
  virtual ::java::awt::Insets *getBorderInsets (::java::awt::Component *, ::java::awt::Insets *);
  virtual jboolean isBorderOpaque ();
  virtual jint getEtchType () { return etchType; }
  virtual ::java::awt::Color *getHighlightColor (::java::awt::Component *);
  virtual ::java::awt::Color *getHighlightColor () { return highlight; }
  virtual ::java::awt::Color *getShadowColor (::java::awt::Component *);
  virtual ::java::awt::Color *getShadowColor () { return shadow; }
private:
  static void paintEtchedBorder (::java::awt::Graphics *, jint, jint, jint, jint, ::java::awt::Color *, ::java::awt::Color *);
public: // actually package-private
  static const jlong serialVersionUID = 4001244046866360638LL;
public:
  static const jint RAISED = 0L;
  static const jint LOWERED = 1L;
public:  // actually protected
  jint __attribute__((aligned(__alignof__( ::javax::swing::border::AbstractBorder ))))  etchType;
  ::java::awt::Color *highlight;
  ::java::awt::Color *shadow;
public:

  static ::java::lang::Class class$;
};

#endif /* __javax_swing_border_EtchedBorder__ */
